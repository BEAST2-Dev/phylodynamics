<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.likelihood:beast.core.parameter:beast.util:beast.evolution.operators" version="2.0">

    <!-- lk = -66.7205 with survival = FALSE -->
    <tree spec='TreeParser' id='tree' IsLabelledNewick="true" adjustTipHeights="false" newick='(((t5:1.451852497,t2:8.566665265):36.27033323,t1:21.40365424):0.5801249847,(t3:0.5007058277,t4:1.291298166):15.44875327);'/>

    <!--
        Either give the tree and origin as inputs or else give all the event times and event types
        (Note: origin and tree are required inputs, so they must always be specified.  However if the event times and
               types are given as input the origin and the tree will be ignored by ExactBDSIS.  Giving the event times
               and types as input is STRICTLY for debugging purposes).
    -->
    <distribution spec='beast.phylodynamics.ExactBDSIS' id='treeprior1' survival="false" tree="@tree">
        <parameter id='popSize'       name='popSize'       value='15.0'/>
        <parameter id='infectionRate' name='infectionRate' value='1.0'/>
        <parameter id='deathRate'     name='deathRate'     value='0.1'/>
        <parameter id='samplingRate'  name='samplingRate'  value='0.1'/>
        <parameter id='rho'           name='rho'           value='0.0'/>
        <parameter id='origin'        name='origin'        value='46.219110'/>
        <!--parameter dimension='9'                       id='eventTimes' name='eventTimes' value='0.000000  7.114813  8.566665 23.433344 28.677072 29.467664 29.968370 44.836998 45.417123 46.219110'/-->
        <!--input spec='IntegerParameter' dimension='10'  id='eventTypes' name='eventTypes' value='0 0 1 0 0 0 1 1 1 1'/-->
    </distribution>


    <run chainLength="0" id="mcmc" preBurnin="0" sampleFromPrior="false" spec="MCMC" storeEvery="-1" distribution="@treeprior1">
        <state id="state" storeEvery="1000">
            <stateNode idref='tree'/>
            <!--stateNode idref='test2.popSize'/>
            <stateNode idref='test2.infectionRate'/>
            <stateNode idref='test2.deathRate'/-->
        </state>

        <operator spec="Uniform" weight="1" tree="@tree"/>
        <!--operator degreesOfFreedom="1" optimise="true" parameter="@test2.popSize" rootOnly="false" scaleAll="false" scaleAllIndependently="false" scaleFactor="0.75" spec="ScaleOperator" weight="3.0"/>
        <operator degreesOfFreedom="1" optimise="true" parameter="@test2.infectionRate" rootOnly="false" scaleAll="false" scaleAllIndependently="false" scaleFactor="0.75" spec="ScaleOperator" weight="3.0"/>
        <operator degreesOfFreedom="1" optimise="true" parameter="@test2.deathRate" rootOnly="false" scaleAll="false" scaleAllIndependently="false" scaleFactor="0.75" spec="ScaleOperator" weight="3.0"/-->

        <logger id="screenlog" logEvery="1" mode="autodetect" sanitiseHeaders="true" sort="none">
            <parameter idref='popSize' name='log'/>
            <parameter idref='infectionRate' name='log' id="beta"/>
            <parameter idref='deathRate' name='log'/>
            <distribution idref='treeprior1' name='log'/>
        </logger>
    </run>




</beast>
